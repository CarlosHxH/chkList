// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}
//env("DATABASE_URL")

model User {
  id            String    @id @default(uuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
  CheckList CheckList[]
}

model Account {
  id                String   @id @default(cuid())
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?//  @db.Text
  access_token      String?//  @db.Text
  expires_at        Int?
  scope             String?
  id_token          String?//  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  sessionToken String   @unique @map("session_token")// @db.Text
  accessToken  String?  @map("access_token")// @db.Text
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("sessions")
}


model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Vehicle {
  id          String     @id @default(cuid())
  tipo        String
  marca       String
  modelo      String
  ano         Int
  capacidade  Float
  placa       String
  checkLists  CheckList[]
}

model Form {
  id               String   @id @default(cuid())
  nivelOleo        String   // Nível do óleo (ex: "Baixo", "Adequado", "Alto")
  pneuFurado       Boolean  // Indica se o pneu está furado
  nivelAgua        String   // Nível da água (ex: "Baixo", "Adequado", "Alto")
  eletrica         String   // Estado da parte elétrica (ex: "Funcionando", "Com Problemas")
  freio            String   // Estado dos freios (ex: "Bom", "Precisa de Manutenção")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  checklist        CheckList[]
}

model CheckList {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  vehicleId    String?  @map("vehicle_id")
  formId       String?  @map("form_id")
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  vehicle      Vehicle? @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  form         Form?    @relation(fields: [formId], references: [id], onDelete: Cascade)
}